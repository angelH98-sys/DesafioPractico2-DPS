{"version":3,"sources":["./src/app/services/customer.service.ts","./src/environments/environment.ts","./src/app/components/customer-signup/customer-signup.component.ts","./src/app/components/customer-signup/customer-signup.component.html","./src/app/material.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/components/customer-panel/customer-panel.component.ts","./src/app/components/customer-panel/customer-panel.component.html","./src/app/components/customer-panel/update-customer-dialog.html","./src/app/components/customer-panel/delete-customer-dialog.html","./src/app/models/appointment.ts","./src/app/models/customer.ts","./src/app/components/appointment-panel/appointment-panel.component.ts","./src/app/components/appointment-panel/appointment-panel.component.html","./src/app/components/appointment-panel/new-appointment-dialog.html","./src/app/components/appointment-panel/update-appointment-dialog.html","./src/app/components/appointment-panel/delete-appointment-dialog.html","./src/app/components/appointment-panel/ticket-dialog.html","./src/app/app-routing.module.ts","./src/app/utilities/messenger.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { Customer } from '../models/customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private firestore: AngularFirestore) { }\n\n  createCustomer(data) {\n    return this.firestore.collection(\"customers\").add({\n      name: data.name,\n      dui: data.dui,\n      petName: data.petName,\n      appointments: null\n    });\n  }\n\n  getCustomers(){\n    return this.firestore.collection(\"customers\").snapshotChanges();\n  }\n\n  updateCustomer(customer: Customer){\n    return this.firestore.collection(\"customers\").doc(customer.id)\n      .set({\n        name: customer.name,\n        dui: customer.dui,\n        petName: customer.petName\n      });\n  }\n\n  deleteCustomer(id){\n    return this.firestore.collection(\"customers\").doc(id).delete();\n  }\n\n  getCustomer(id){\n    return this.firestore.doc(`customers/${id}`).valueChanges();\n  }\n\n  updateAppointments(id, data){\n    return this.firestore.doc(`customers/${id}`).update({\n      appointments: data\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyCfUWRmyQZNcp5DU5FcYiuOgqbHcel8HfE\",\n    authDomain: \"desafio2dps.firebaseapp.com\",\n    databaseURL: \"https://desafio2dps.firebaseio.com\",\n    projectId: \"desafio2dps\",\n    storageBucket: \"desafio2dps.appspot.com\",\n    messagingSenderId: \"473119971732\",\n    appId: \"1:473119971732:web:2469e96634ad905dc0d781\",\n    measurementId: \"G-NX7PS7FKCN\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { MessengerService } from 'src/app/utilities/messenger.service';\n\n@Component({\n  selector: 'app-customer-signup',\n  templateUrl: './customer-signup.component.html',\n  styleUrls: ['./customer-signup.component.css']\n})\nexport class CustomerSignupComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public messenger: MessengerService,\n    private snackBar: MatSnackBar,\n    private customerService: CustomerService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      dui: ['', [Validators.required, Validators.pattern(/^[0-9]{8}-[0-9]$/)]],\n      petName: ['', Validators.required]\n    });\n  }\n\n  onSubmit(){\n    if(this.form.invalid) return false;\n    this.customerService.createCustomer(this.form.value).then(res => {\n      this.router.navigate(['customer/panel'])\n    });\n  }\n\n  errorAlert(message: string){\n    this.snackBar.open(message, 'Cerrar', {\n      duration: 2000,\n      horizontalPosition: 'right',\n      verticalPosition: 'bottom',\n      panelClass: ['snackbar']\n    });\n  }\n\n}\n","<mat-card class=\"col-xl-6 mx-auto shadow\">\n    <p class=\"mat-display-1 mb-3 text-center\">\n        Registro de clientes\n    </p>\n    <form class=\"row\" (ngSubmit)=\"onSubmit()\"\n        [formGroup]=\"form\">\n        <mat-form-field class=\"col-12 mb-1\">\n            <mat-label>\n                Nombre\n            </mat-label>\n            <input matInput type=\"text\" formControlName=\"name\">\n            <mat-error *ngIf=\"form.get('name').invalid\">\n                {{messenger.getInputError(form, 'name')}}\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"col-12 mb-1\">\n            <mat-label>\n                DUI\n            </mat-label>\n            <input matInput type=\"text\" formControlName=\"dui\"\n                maxlength=\"10\">\n            <mat-hint>Ej: 01234567-8</mat-hint>\n            <mat-error *ngIf=\"form.get('dui').invalid\">\n                {{messenger.getInputError(form, 'dui')}}\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"col-12 mb-1\">\n            <mat-label>\n                Mascota\n            </mat-label>\n            <input matInput type=\"text\" formControlName=\"petName\">\n            <mat-error *ngIf=\"form.get('petName').invalid\">\n                {{messenger.getInputError(form, 'petName')}}\n            </mat-error>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\"\n            class=\"col-11 mx-auto py-2\"\n            [disabled]=\"form.invalid\">\n            Enviar\n        </button>\n    </form>\n</mat-card>","import { NgModule } from '@angular/core';\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatDividerModule} from '@angular/material/divider';\n\n@NgModule({\n    imports: [\n        MatToolbarModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatSnackBarModule,\n        MatInputModule,\n        MatTableModule,\n        MatIconModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatDividerModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatSnackBarModule,\n        MatInputModule,\n        MatTableModule,\n        MatIconModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatDividerModule\n    ]\n})\n\nexport class MaterialModules{}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'desafio2dps';\n}\n","<mat-toolbar color=\"primary\">\n  <span>Veterinaria de la Dra. Lissete</span>\n  <button mat-button routerLink=\"/customer/panel\">Clientes registrados</button>\n  <button mat-button routerLink=\"/customer/signup\">Nuevo cliente</button>\n</mat-toolbar>\n\n<div class=\"container mt-3\">\n  <router-outlet></router-outlet>\n</div>","import { Component, NgZone, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase';\nimport { MessengerService } from 'src/app/utilities/messenger.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public messenger: MessengerService,\n    public afAuth: AngularFireAuth,\n    public ngZone: NgZone,\n    public router: Router,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n\n    this.form = this.formBuilder.group({\n      user: ['', Validators.required],\n      pass: ['', Validators.required]\n    });\n  }\n\n  AuthLogin() {\n    return this.afAuth.signInWithPopup(new auth.GoogleAuthProvider())\n    .then((result) => {\n       this.ngZone.run(() => {\n          this.showMessage(result.user, 1);\n          this.router.navigate(['/customer/panel']);\n        })\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  onSubmit(): void{\n    if(this.form.get('user').value == \"admin\" && this.form.get('pass').value == \"admin\"){\n      this.showMessage(\"usuario administrador\", 2);\n      this.router.navigate(['/customer/panel']);\n    }else{\n      this.showMessage(\"\", 3);\n    }\n  }\n\n  showMessage(user, type){\n    let message = \"\";\n    switch(type){\n      case 1:{\n        message = \"Bienvenido \" + user.displayName;\n      }\n      case 2:{\n        message = \"Bienvenido \" + user;\n      }\n      case 3:{\n        message = \"Credenciales incorrectas\";\n      }\n    }\n    this.snackBar.open(message, 'Cerrar', {\n      duration: 2000,\n      horizontalPosition: 'right',\n      verticalPosition: 'bottom',\n      panelClass: ['snackbar']\n    });\n  }\n\n}\n","<div class=\"row\">\n    <mat-card class=\"col-xl-6\">\n        <h1 class=\"mat-h1\">Inicio de sesión</h1>\n        <form class=\"row\" [formGroup]=\"form\"\n            (ngSubmit)=\"onSubmit()\">\n            <mat-form-field class=\"col-12 mb-1\">\n                <mat-label>\n                    Usuario\n                </mat-label>\n                <input matInput type=\"text\"\n                    formControlName=\"user\"\n                    placeholder=\"admin\">\n                <mat-error *ngIf=\"form.get('user').invalid\">\n                    {{messenger.getInputError(form, 'user')}}\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"col-12 mb-1\">\n                <mat-label>\n                    Contraseña\n                </mat-label>\n                <input matInput type=\"password\"\n                    formControlName=\"pass\"\n                    placeholder=\"admin\">\n                <mat-error *ngIf=\"form.get('pass').invalid\">\n                    {{messenger.getInputError(form, 'pass')}}\n                </mat-error>\n            </mat-form-field>\n            <div class=\"col-xl-6 mx-auto\">\n                <button mat-raised-button color=\"primary\"\n                    [disabled]=\"form.invalid\"\n                    class=\"w-100\">\n                    Enviar\n                </button>\n            </div>\n        </form>\n        <div class=\"row\">\n            <div class=\"col-12 mt-3 mb-2\">\n                <p class=\"mat-h1 text-center\">ó</p>\n            </div>\n            <div class=\"col-xl-6 mx-auto\">\n                <button mat-raised-button color=\"primary\"\n                    (click)=\"AuthLogin()\"\n                    class=\"w-100\">\n                    Iniciar sesión con Google\n                </button>\n            </div>\n        </div>\n    </mat-card>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { MaterialModules } from './material';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\n\n\nimport { CustomerSignupComponent } from './components/customer-signup/customer-signup.component';\nimport { AppComponent } from './app.component';\nimport { CustomerService } from './services/customer.service';\nimport { CustomerPanelComponent, UpdateCustomerDialog, DeleteCustomerDialog } from './components/customer-panel/customer-panel.component';\nimport { AppointmentPanelComponent, NewAppointmentDialog, UpdateAppointmentDialog, DeleteAppointmentDialog, TicketDialog } from './components/appointment-panel/appointment-panel.component';\nimport { LoginComponent } from './components/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerSignupComponent,\n    CustomerPanelComponent,\n    UpdateCustomerDialog,\n    DeleteCustomerDialog,\n    AppointmentPanelComponent,\n    NewAppointmentDialog,\n    UpdateAppointmentDialog,\n    DeleteAppointmentDialog,\n    TicketDialog,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    BrowserAnimationsModule,\n    MaterialModules,\n    ReactiveFormsModule,\n    AngularFireAuthModule\n  ],\n  providers: [\n    CustomerService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Customer } from 'src/app/models/customer';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { MessengerService } from 'src/app/utilities/messenger.service';\n\n@Component({\n  selector: 'app-customer-panel',\n  templateUrl: './customer-panel.component.html',\n  styleUrls: ['./customer-panel.component.css']\n})\nexport class CustomerPanelComponent implements OnInit {\n\n  list;\n\n  constructor(\n    private customerService: CustomerService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n\n    this.getCustomers();\n  }\n\n  getCustomers(){\n    this.customerService.getCustomers().subscribe(res => {\n      let list = [];\n      res.forEach((single: any) => {\n        list.push({\n          id: single.payload.doc.id,\n          name: single.payload.doc.data().name,\n          dui: single.payload.doc.data().dui,\n          petName: single.payload.doc.data().petName,\n          appointments: []\n        });\n        this.list = new MatTableDataSource(list);\n      })\n    })\n  }\n\n  openUpdateDialog(customer): void {\n    const dialogRef = this.dialog.open(UpdateCustomerDialog, {\n      width: '250px',\n      data: customer\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result != undefined && result != customer){\n        this.customerService.updateCustomer(result).then(\n          res => {\n            this.showMessage(\"Registro modificado exitosamente\");\n            this.getCustomers();\n          }\n        )\n      }\n    });\n  }\n\n  openDeleteDialog(customer: Customer): void{\n    const dialogRef = this.dialog.open(DeleteCustomerDialog, {\n      width: '250px',\n      data: customer.name\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.customerService.deleteCustomer(customer.id).then(\n          res => {\n            this.showMessage(\"Registro eliminado exitosamente\");\n            this.getCustomers();\n          }\n        )\n      }\n    });\n  }\n\n  showMessage(message: string){\n    this.snackBar.open(message, 'Cerrar', {\n      duration: 2000,\n      horizontalPosition: 'right',\n      verticalPosition: 'bottom',\n      panelClass: ['snackbar']\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.list.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n\n@Component({\n  selector: 'update-customer-dialog',\n  templateUrl: 'update-customer-dialog.html',\n})\nexport class UpdateCustomerDialog {\n\n  form: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<UpdateCustomerDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: Customer,\n    private formBuilder: FormBuilder,\n    public messenger: MessengerService) {\n      this.setForm();\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  setForm(){\n    this.form = this.formBuilder.group({\n      id: this.data.id,\n      name: [this.data.name, Validators.required],\n      dui: [this.data.dui, [Validators.required, Validators.pattern(/^[0-9]{8}-[0-9]$/)]],\n      petName: [this.data.petName, Validators.required]\n    })\n  }\n\n}\n\n@Component({\n  selector: 'delete-customer-dialog',\n  templateUrl: 'delete-customer-dialog.html',\n})\nexport class DeleteCustomerDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteCustomerDialog>,\n    @Inject(MAT_DIALOG_DATA) public customer: string) {\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<p class=\"mat-display-1 mb-3 text-center\">\n    Clientes registrados\n</p>\n<div class=\"row\">\n    <div class=\"col-2\">\n        <button mat-raised-button color=\"primary\"\n            class=\"w-100\"\n            routerLink=\"../signup\">\n            Nuevo cliente\n        </button>\n    </div>\n    <mat-form-field class=\"col-10\">\n        <mat-label>Buscar</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\">\n    </mat-form-field>\n</div>\n<table mat-table [dataSource]=\"list\" class=\"w-100 mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>\n            Cliente\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            {{item.name}}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"dui\">\n        <th mat-header-cell *matHeaderCellDef>\n            DUI\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            {{item.dui}}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"petName\">\n        <th mat-header-cell *matHeaderCellDef>\n            Mascota\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            {{item.petName}}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef>\n            Acciones\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            <button mat-icon-button color=\"primary\"\n                (click)=\"openUpdateDialog(item)\"\n                matTooltip=\"Editar\">\n                <mat-icon>edit</mat-icon>\n            </button>\n            <button mat-icon-button color=\"primary\"\n                (click)=\"openDeleteDialog(item)\"\n                matTooltip=\"Eliminar\">\n                <mat-icon>delete</mat-icon>\n            </button>\n            <button mat-icon-button color=\"primary\"\n                [routerLink]=\"['../../appointment/panel/', item.id]\"\n                matTooltip=\"Citas\">\n                <mat-icon>assignment</mat-icon>\n            </button>\n        </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef='[\"name\", \"dui\", \"petName\", \"actions\"]'></tr>\n    <tr mat-row *matRowDef='let row; columns: [\"name\", \"dui\", \"petName\", \"actions\"];'></tr>\n</table>","<h1 mat-dialog-title>Actualización de datos</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"form\">\n        <mat-form-field class=\"mb-1\">\n            <mat-label>Nombre</mat-label>\n            <input matInput type=\"text\"\n                formControlName=\"name\">\n            <mat-error *ngIf=\"form.get('name').invalid\">\n                {{messenger.getInputError(form, 'name')}}\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"mb-1\">\n            <mat-label>DUI</mat-label>\n            <input matInput type=\"text\"\n                formControlName=\"dui\">\n            <mat-error *ngIf=\"form.get('dui').invalid\">\n                {{messenger.getInputError(form, 'dui')}}\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"mb-1\">\n            <mat-label>Mascota</mat-label>\n            <input matInput type=\"text\"\n                formControlName=\"petName\">\n            <mat-error *ngIf=\"form.get('petName').invalid\">\n                {{messenger.getInputError(form, 'petName')}}\n            </mat-error>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">\n        Cancelar\n    </button>\n    <button mat-button [mat-dialog-close]=\"form.value\"\n        cdkFocusInitial\n        [disabled]=\"form.invalid\">\n        Enviar\n    </button>\n</div>","<h1 mat-dialog-title>Eliminar cliente</h1>\n<div mat-dialog-content>\n    <p class=\"mat-body\">\n        ¿Estás seguro eliminar a {{customer}}?\n    </p>    \n</div>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close>Cancelar</button>\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Confirmar</button>\n</mat-dialog-actions>","export class Appointment {\n\n    constructor(){\n        this.treatment = \"\";\n        this.drug = \"\";\n        this.regularCost = 0;\n        this.discount = 0;\n        this.realCost = 0;\n    }\n\n    treatment: string;\n    drug: string;\n    regularCost: number;\n    discount: number;\n    realCost: number;\n\n}\n","import { Appointment } from './appointment';\n\nexport class Customer {\n\n    constructor(){\n        this.id = \"\";\n        this.name = \"\";\n        this.dui = \"\";\n        this.petName = \"\";\n        this.appointments = [];\n    }\n\n    id: string;\n    name: string;\n    dui: string;\n    petName: string;\n    appointments: Appointment[];\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute } from '@angular/router';\nimport { Appointment } from 'src/app/models/appointment';\nimport { Customer } from 'src/app/models/customer';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { MessengerService } from 'src/app/utilities/messenger.service';\n\n@Component({\n  selector: 'app-appointment-panel',\n  templateUrl: './appointment-panel.component.html',\n  styleUrls: ['./appointment-panel.component.css']\n})\nexport class AppointmentPanelComponent implements OnInit {\n\n  customer: Customer = new Customer();\n  list;\n  id;\n\n  constructor(\n    private route: ActivatedRoute,\n    private customerService: CustomerService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void{\n\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.getCustomer();\n  }\n\n  getCustomer(){\n    this.customerService.getCustomer(this.id).subscribe(\n      (res: any) => {\n        this.customer.name = res.name;\n        this.customer.dui = res.dui;\n        this.customer.petName = res.petName;\n        this.customer.appointments = res.appointments;\n        this.list = new MatTableDataSource(res.appointments);\n      }\n    )\n  }\n\n  openNewAppointmentDialog(): void {\n    const dialogRef = this.dialog.open(NewAppointmentDialog);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result != undefined){\n        let appointments;\n        if(this.customer.appointments != null){\n          appointments = this.customer.appointments;\n        }else{\n          appointments = [];\n        }\n\n        let discount = 0;\n        if(appointments.length >= 2){\n          discount = 0.05 * result.regularCost;\n        }\n        if(appointments.length >= 5){\n          discount = 0.08 * result.regularCost;\n        }\n\n        let realCost = result.regularCost - discount;\n        appointments.push({\n          treatment: result.treatment,\n          drug: result.drug,\n          regularCost: result.regularCost,\n          discount,\n          realCost\n        });\n\n        this.customerService.updateAppointments(this.id, appointments).then(\n          res => {\n            this.showMessage(\"Cita registrada exitosamente\");\n            this.customer.appointments = appointments;\n            this.list = new MatTableDataSource(appointments);\n          }\n        )\n      }\n    });\n  }\n\n  openUpdateAppointmentDialog(item): void {\n    let index = this.customer.appointments.indexOf(item);\n    const dialogRef = this.dialog.open(UpdateAppointmentDialog, {\n      data: item\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result != undefined){\n        this.customer.appointments[index].treatment = result.treatment;\n        this.customer.appointments[index].drug = result.drug;\n        \n        this.customerService.updateAppointments(this.id, this.customer.appointments).then(\n          res => {\n            this.list = new MatTableDataSource(this.customer.appointments);\n            this.showMessage(\"Cita modificada exitosamente\");\n          }\n        );\n      }\n    });\n  }\n\n  openDeleteAppointmentDialog(item): void {\n    let index = this.customer.appointments.indexOf(item);\n    const dialogRef = this.dialog.open(DeleteAppointmentDialog);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result == true){\n        this.customer.appointments.splice(index, 1);\n        \n        this.customerService.updateAppointments(this.id, this.customer.appointments).then(\n          res => {\n            this.list = new MatTableDataSource(this.customer.appointments);\n            this.showMessage(\"Cita eliminada exitosamente\");\n          }\n        );\n      }\n    });\n  }\n\n  openTicketDialog(item: Appointment): void {\n    const dialogRef = this.dialog.open(TicketDialog, {\n      data: {\n        customer: this.customer.name,\n        petName: this.customer.petName,\n        appointment: item\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result == true){\n        let ticket: string;\n        ticket = \"  Veterina de la Dra. Lissete\\n\";\n        ticket += \"---------------------------------\\n\";\n        ticket += \"Cliente...........\" + this.customer.name + \"\\n\";\n        ticket += \"Mascota...........\" + this.customer.petName + \"\\n\";\n        ticket += \"Tratamiento.......\" + item.treatment + \"\\n\";\n        ticket += \"Medicamento.......\" + item.drug + \"\\n\";\n        ticket += \"---------------------------------\\n\";\n        ticket += \"Costo regular.....$\" + item.regularCost.toFixed(2) + \"\\n\";\n        ticket += \"Descuento.........$\" + item.discount.toFixed(2) + \"\\n\";\n        ticket += \"Costo real........$\" + item.realCost.toFixed(2) + \"\\n\";\n        this.dyanmicDownloadByHtmlTag({\n          fileName: 'Ticket',\n          text: ticket\n        });\n      }\n    });\n  }\n\n  showMessage(message: string){\n    this.snackBar.open(message, 'Cerrar', {\n      duration: 2000,\n      horizontalPosition: 'right',\n      verticalPosition: 'bottom',\n      panelClass: ['snackbar']\n    });\n  }\n  \n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.list.filter = filterValue.trim().toLowerCase();\n  }\n\n  private setting = {\n    element: {\n      dynamicDownload: null as HTMLElement\n    }\n  }\n\n  private dyanmicDownloadByHtmlTag(arg: {\n    fileName: string,\n    text: string\n  }) {\n    if (!this.setting.element.dynamicDownload) {\n      this.setting.element.dynamicDownload = document.createElement('a');\n    }\n    const element = this.setting.element.dynamicDownload;\n    const fileType = arg.fileName.indexOf('.json') > -1 ? 'text/json' : 'text/plain';\n    element.setAttribute('href', `data:${fileType};charset=utf-8,${encodeURIComponent(arg.text)}`);\n    element.setAttribute('download', arg.fileName);\n\n    var event = new MouseEvent(\"click\");\n    element.dispatchEvent(event);\n  }\n\n}\n\n@Component({\n  selector: 'new-appointment-dialog',\n  templateUrl: 'new-appointment-dialog.html',\n})\nexport class NewAppointmentDialog {\n\n  form: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<NewAppointmentDialog>,\n    private formBuilder: FormBuilder,\n    public messenger: MessengerService) {\n      this.setForm();\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  setForm(){\n    this.form = this.formBuilder.group({\n      treatment: ['', Validators.required],\n      drug: '',\n      regularCost: ['', [Validators.required, Validators.pattern(/^[0-9]+(\\.[0-9]{1,2})?$/)]]\n    });\n  }\n\n}\n\n@Component({\n  selector: 'update-appointment-dialog',\n  templateUrl: 'update-appointment-dialog.html',\n})\nexport class UpdateAppointmentDialog {\n\n  form: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<NewAppointmentDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: Appointment,\n    private formBuilder: FormBuilder,\n    public messenger: MessengerService) {\n      this.setForm();\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  setForm(){\n    this.form = this.formBuilder.group({\n      treatment: [this.data.treatment, Validators.required],\n      drug: this.data.drug\n    });\n  }\n\n}\n\n@Component({\n  selector: 'delete-appointment-dialog',\n  templateUrl: 'delete-appointment-dialog.html',\n})\nexport class DeleteAppointmentDialog {\n\n  form: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteAppointmentDialog>) {\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n@Component({\n  selector: 'ticket-dialog',\n  templateUrl: 'ticket-dialog.html',\n})\nexport class TicketDialog {\n\n  form: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteAppointmentDialog>,\n    @Inject(MAT_DIALOG_DATA) public data) {\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}","<p class=\"mat-display-1 mb-3 text-center\">\n    Citas del cliente: {{customer.name}}\n</p>\n<div class=\"row\">\n    <div class=\"col-1\">\n        <button mat-mini-fab color=\"warn\"\n            matTooltip=\"Volver\"\n            routerLink=\"/customer/panel\">\n            <mat-icon>keyboard_backspace</mat-icon>\n        </button>\n    </div>\n    <div class=\"col-2\">\n        <button mat-raised-button color=\"primary\"\n            class=\"w-100\"\n            (click)=\"openNewAppointmentDialog()\">\n            Nueva consulta\n        </button>\n    </div>\n    <mat-form-field class=\"col-9\">\n        <mat-label>Buscar</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\">\n    </mat-form-field>\n</div>\n<table *ngIf=\"customer.appointments != null\" \n    mat-table [dataSource]=\"list\"\n    class=\"w-100 mat-elevation-z8\">\n    <ng-container matColumnDef=\"treatment\">\n        <th mat-header-cell *matHeaderCellDef>\n            Tratamiento\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            {{item.treatment}}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"drug\">\n        <th mat-header-cell *matHeaderCellDef>\n            Medicina\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            {{item.drug}}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"regularCost\">\n        <th mat-header-cell *matHeaderCellDef>\n            Costo Regular\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            ${{item.regularCost.toFixed(2)}}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"discount\">\n        <th mat-header-cell *matHeaderCellDef>\n            Descuento\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            ${{item.discount.toFixed(2)}}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"realCost\">\n        <th mat-header-cell *matHeaderCellDef>\n            Costo Real\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            ${{item.realCost.toFixed(2)}}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef>\n            Acciones\n        </th>\n        <td mat-cell *matCellDef=\"let item\">\n            <button mat-icon-button color=\"primary\"\n                (click)=\"openUpdateAppointmentDialog(item)\"\n                matTooltip=\"Editar\">\n                <mat-icon>edit</mat-icon>\n            </button>\n            <button mat-icon-button color=\"primary\"\n                (click)=\"openDeleteAppointmentDialog(item)\"\n                matTooltip=\"Eliminar\">\n                <mat-icon>delete</mat-icon>\n            </button>\n            <button mat-icon-button color=\"primary\"\n                (click)=\"openTicketDialog(item)\"\n                matTooltip=\"Ticket\">\n                <mat-icon>receipt_long</mat-icon>\n            </button>\n        </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef='[\"treatment\", \"drug\", \"regularCost\", \"discount\", \"realCost\", \"actions\"]'></tr>\n    <tr mat-row *matRowDef='let row; columns: [\"treatment\", \"drug\", \"regularCost\", \"discount\", \"realCost\", \"actions\"];'></tr>\n</table>","<h1 mat-dialog-title>Nueva cita</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"form\" class=\"row\">\n        <mat-form-field class=\"mb-1 col-12\">\n            <mat-label>Tratamiento</mat-label>\n            <input matInput type=\"text\"\n                formControlName=\"treatment\">\n            <mat-error *ngIf=\"form.get('treatment').invalid\">\n                {{messenger.getInputError(form, 'treatment')}}\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"mb-1 col-12\">\n            <mat-label>Medicamento</mat-label>\n            <input matInput type=\"text\"\n                formControlName=\"drug\">\n            <mat-error *ngIf=\"form.get('drug').invalid\">\n                {{messenger.getInputError(form, 'drug')}}\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"mb-1 col-12\">\n            <mat-label>Costo</mat-label>\n            <input matInput type=\"number\"\n                min=\"0\" step=\"0.01\"\n                formControlName=\"regularCost\">\n            <span matPrefix>$&nbsp;</span>\n            <mat-error *ngIf=\"form.get('drug').invalid\">\n                {{messenger.getInputError(form, 'drug')}}\n            </mat-error>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">\n        Cancelar\n    </button>\n    <button mat-button [mat-dialog-close]=\"form.value\"\n        [disabled]=\"form.invalid\">\n        Enviar\n    </button>\n</div>","<h1 mat-dialog-title>Nueva cita</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"form\" class=\"row\">\n        <mat-form-field class=\"col-12 mb-1\">\n            <mat-label>\n                Tratamiento\n            </mat-label>\n            <input matInput type=\"text\"\n                formControlName=\"treatment\">\n            <mat-error *ngIf=\"form.get('treatment').invalid\">\n                {{messenger.getInputError(form, 'treatment')}}\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"col-12 mb-1\">\n            <mat-label>\n                Medicamento\n            </mat-label>\n            <input matInput type=\"text\"\n                formControlName=\"drug\">\n            <mat-error *ngIf=\"form.get('drug').invalid\">\n                {{messenger.getInputError(form, 'drug')}}\n            </mat-error>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">\n        Cancelar\n    </button>\n    <button mat-button [mat-dialog-close]=\"form.value\"\n        [disabled]=\"form.invalid\">\n        Enviar\n    </button>\n</div>","<h1 mat-dialog-title>Eliminar cita</h1>\n<div mat-dialog-content>\n    <p class=\"mat-body\">\n        ¿Estás seguro eliminar la cita seleccionada?\n    </p>    \n</div>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close>Cancelar</button>\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Confirmar</button>\n</mat-dialog-actions>","<h1 mat-dialog-title>Ticket de cita</h1>\n<div mat-dialog-content>\n    <h1 class=\"mat-h1\">Veterinaria de la Dra. Lissete</h1>\n    <p class=\"mat-body\">\n        <b>Cliente:</b> Sr(a). {{data.customer}}\n        <br>\n        <b>Mascota:</b> {{data.petName}}\n        <br>\n        <b>Tratamiento:</b> {{data.appointment.treatment}}\n        <br>\n        <b>Medicamento:</b> {{data.appointment.drug}}\n    </p>\n    <mat-divider></mat-divider>\n    <p class=\"mat-body text-right\">\n        Costo regular: ${{data.appointment.regularCost.toFixed(2)}}\n        <br>\n        Descuento: ${{data.appointment.discount.toFixed(2)}}\n        <br>\n        <b>Costo real: ${{data.appointment.realCost.toFixed(2)}}</b>\n    </p>\n</div>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close>Cancelar</button>\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Imprimir</button>\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppointmentPanelComponent } from './components/appointment-panel/appointment-panel.component';\nimport { CustomerPanelComponent } from './components/customer-panel/customer-panel.component';\nimport { CustomerSignupComponent } from './components/customer-signup/customer-signup.component';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  {path:\"login\", component: LoginComponent},\n  {path:\"customer/signup\", component: CustomerSignupComponent},\n  {path:\"customer/panel\", component: CustomerPanelComponent},\n  {path:\"appointment/panel/:id\", component: AppointmentPanelComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessengerService {\n\n  getInputError(formGroup: FormGroup, inputName: string){\n    let formControl: FormControl;\n    formControl = formGroup.get(inputName) as FormControl;\n\n    for(let error in formControl.errors){\n      switch(error){\n        case \"required\":{\n          return \"Campo requerido\";\n        }\n        case \"pattern\":{\n          return \"Formato incorrecto\";\n        }\n      }\n    }\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}